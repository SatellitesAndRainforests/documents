


----------------------------------------------------------------------------------------------------------------------------


/auth-callback?code=FHO_xdVc0zR5SfhnS4sWw-t2nXQ&iss=https%3A%2F%2Fam.nhsdev.auth-ptl.cis2.spineservices.nhs.uk%3A443%2Fopenam%2Foauth2%2Frealms%2Froot%2Frealms%2Foidc&state=WGJkZt8xYLc1veER3DGtByPeeXhboO&client_id=277214098809.apps.supplier:1 

Refused to load the image 

'blob:https://ndra.access-request-fulfilment.patient-deductions.nhs.uk/d49baf88-205f-4e23-a64d-5bc7a5e755e0' 

because it violates the following Content Security Policy directive: "img-src 'self'".

--
--

img-src 'self' blob;

pdf.js converts the original file url into blob urls internally to render the pdf document in parts,
for efficent loading and rendering.

allows the app to internally use blob urls

this setting does not change the exsisting s3 urls to type blob or allow external resources.
the use of blob urls is limited to internal use and can only point to internal resources

to add:
from
Content-Security-Policy: img-src 'self';
to
Content-Security-Policy: img-src 'self' blob:;

----------------------------------------------------------------------------------------------------------------------------


Refused to frame 

'https://ndra.access-request-fulfilment.patient-deductions.nhs.uk/' 

because an ancestor violates the following Content Security Policy directive: "frame-ancestors 'none'".

--
--

frame-ancestors 'self' 

ensures an iframe's ancestor (the page embedding it) is located at the same location 
(same origin: domain, protocol, port / server)

allows parts of the react app ( public/pdfjs ) to be embedded by other parts of our system that are at the same
location, which is effectifly only the rest of the react app
(same origin: domain, protocol, port / server)

and cannot be iframed embedded by applications at other location
for example another website tries to embedd our react app 

to add:
from
Content-Security-Policy: frame-ancestors 'none';
to
Content-Security-Policy: frame-ancestors 'self';


----------------------------------------------------------------------------------------------------------------------------

sandbox="allow-scripts allow-same-origin allow-popups"
letsrun pdfjs run its own js , 
use origin-restricted resources , allows pdfjs to fetch the 3s url, and use its own cookies and ...
open document links in new tabs, not in the iframe . minimizes attack surfaces.


----------------------------------------------------------------------------------------------------------------------------

increase the presigned url expiration time for large giles to avoid timeouts

cloudfront
api gateway
s3 bucket hosting configuration


