import React, { useEffect, useState } from 'react';

type Props = { fileUrl: string };

const PdfViewer = ({ fileUrl }: Props) => {
    const [useIframe, setUseIframe] = useState(true);

    useEffect(() => {
        if (!useIframe) {
            // Use the embedded PDF viewer as a fallback
            const pdfObject = require('pdfobject');
            pdfObject.embed(fileUrl + '#toolbar', '#pdf-viewer');
        }
    }, [useIframe, fileUrl]);

    if (!fileUrl) return null;

    return (
        <>
            {useIframe ? (
                <iframe
                    id="pdf-viewer"
                    data-testid="pdf-viewer"
                    tabIndex={0}
                    src={`/pdfjs/build/generic/web/viewer.html?file=${encodeURIComponent(fileUrl)}`}
                    title="Embedded PDF Viewer"
                    aria-label="PDF Viewer"
                    style={{ height: 600, width: '100%' }}
                    onError={() => setUseIframe(false)} // Switch to fallback on error
                />
            ) : (
                <div id="pdf-viewer" data-testid="pdf-viewer" tabIndex={0} style={{ height: 600 }}></div>
            )}
        </>
    );
};

export default PdfViewer;

